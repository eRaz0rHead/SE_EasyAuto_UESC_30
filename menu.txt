@Variables {
  blue = "0:200:255"
  orange = "255:200:0"
  green = "200:255:0"
  red = "236:19:19"
  offwhite = "200:169:88"
  
  lightColor = offwhite
  fontColor = blue
  fontSize = 1
  bootScreenColor = blue
  _lbg = BridgeLights
  
  bootScreenLCD = “CENTER Welcome Aboard Captain.“
  welcomeScreenTxt = “CENTER Welcome Aboard Captain.
ECHO
ECHO You are now piloting The Calescent  -- a Wayfarer class exploration vessel. 
ECHO
ECHO The Calescent features a Class B Helios Gravity Drive for primary propulsion.
ECHO
ECHO The Helios responds to standard piloting control without specialized training. 
ECHO NOTE: Maximum Acceleration is only achieved with Inertial Dampeners OFF. 
ECHO 
ECHO A small number of attitude ions provide limited additional propulsion.
ECHO 
ECHO Piloting this vessel inside other gravity fields ( natural or artificial ) is not advisable.
CENTER < Press 1 on your console to initialize systems >”

}

@PowerSave {
  @DimLight  
  @AutoLCD(Off)
  @GravDrive(Off)
  @Diagnostics(Off)
  @Production(Off)
  @MasterTimer(On)
  Clear (BridgeDisplay)
}

// Called when entering bridge for first time.
@Setup {
  @DimLight  
  @AutoLCD(On)
  @GravDrive(Off)
  @Diagnostics(Off)
  @Production(Off)
  @MasterTimer(On)
  Clear (BridgeDisplay)
}

@Welcome {
  If firstRun = true {
  @Setup
  @BrightLight((PilotLights))

  // Remove [LCD] from group in case it’s already there.
  Rename (BridgeDisplay) - “[LCD]”
  Rename (BridgeDisplay) + “[LCD]”
  @LCD(bootScreenLCD)
  
  // Doesn’t work.
  When IsUnderControl of (BridgeStations) == true
       @HasCaptain(true)
    
  // doesn't work either -- can't store vars between runs.
  firstRun = false
  Delay 2000
  Rename (BridgeDisplay) - “[LCD]”
  }
}



// Try “ if (false ) .. “
@HasCaptain {
  @DimLight((PilotLights))
  @LCD(“CENTER Welcome Aboard Captain.
ECHO
ECHO You are now piloting The Calescent  -- a Wayfarer class exploration vessel. 
ECHO
ECHO The Calescent features a Class B Helios Gravity Drive for primary propulsion.
ECHO
ECHO The Helios responds to standard piloting control without specialized training. 
ECHO NOTE: Maximum Acceleration is only achieved with Inertial Dampeners OFF. 
ECHO 
ECHO A small number of attitude ions provide limited additional propulsion.
ECHO 
ECHO Piloting this vessel inside other gravity fields ( natural or artificial ) is not advisable.
CENTER < Press 1 on your console to initialize systems >”, bootScreenColor)
}

@LCD {
//  Run MoveItPB "Messages PrivateText *1"  //MoveIt doesn's seem to support writing to private text!
  PrivateText of Messages = “” *1  // Need to write my own extension for this! Might as well roll Falloff into that.
}

@Reset {
  firstRun = true
  @Welcome
}

// Note won’t work on SimpleAirlock controlled lights -- they get recolored
@DimLight {
  Radius of (_lbg) = 1.5
  Intensity of (_lbg) = 0.5
  Run MoveItPB "\_lbg Falloff 1.5"
}

@DiffuseLight {
  Radius of (_lbg) = 10
  Intensity of (_lbg) = 0.5
  Run MoveItPB "\_lbg Falloff 1"
}

@BrightLight {
  Radius of (_lbg)  = 4
  Intensity of (_lbg)  = 3
  Run MoveItPB "\_lbg Falloff 1"
}

@IntenseLight {
  Radius of (_lbg)  = 3
  Intensity of (_lbg)  = 4
  Run MoveItPB "\_lbg Falloff 2"
}

@Waiting {
  @_Status(”. . .”, “append”)
  Delay 300
}

/// SEE IF THIS WORKS:
@StartSystem {
  @_Status(*1)
  @Waiting
  @AutoLCD(On) *2
  @Waiting
  @_Status(“[Running]”, “append”)
}

@Initialize {
  @DiffuseLight((BridgeLights))
  @_SetFont(orange, 1.5)
  @_Status(“Initializing Systems”)

  @Waiting
  
  @_Status(“[Status Screens]  ”)
  @Waiting
  @AutoLCD(On)
  @Waiting
  @_Status(“[Running]”, “append”)
  @_Status(“[Diagnostics]  ”)
  @Waiting
  @Diagnostics(On)
  @Waiting
  @_Status(“[Running]”, “append”)
  @_Status(“[Helios Gravity Drive] ”)
  @Waiting
  @GravDrive(On)
  @Waiting
  @_Status(“[Running]”, “append”)
  @_Status(“[Production Systems]  ”)
  @Waiting
  @Production(On)
  @Waiting
  @_Status(“[Running]”, “append”)
  Delay 5000
}

@AutoLCD {
  OnOff of Programmable Block [LCD] = On 
}

@GravDrive {
  OnOff of Timer Block [GD] = On *1
  OnOff of Programmable Block [GD] = On *1
  If On *1 {
    TriggerNow Timer Block [GD]
  }
}

/// TIM is controlled by MasterTimer?
@Production {
  OnOff of Refinery = On *1
  OnOff of Assembler = On *1
  OnOff of Programmable Block [TIM] = On *1
  // @DiffuseLight((ProductionLights))
}
